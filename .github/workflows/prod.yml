name: Test Pipeline

on:
  workflow_dispatch:

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   environment:
  #     name: Dev  # Specifies the environment name

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2

  #   - name: Set up AWS CLI
  #     uses: aws-actions/configure-aws-credentials@v2
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ secrets.AWS_REGION }}

  #   - name: Log in to Amazon ECR
  #     id: login-ecr
  #     uses: aws-actions/amazon-ecr-login@v2
  #     with:
  #       registry-type: 'private'

  #   - name: Build and tag Docker image for backend
  #     run: |
  #       cd backend/
  #       echo "Building Docker image..."
  #       docker build --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} --build-arg REGION=${{ secrets.REGION }} -t ${{ secrets.IMAGE_REPO_NAME }}:${{ vars.IMAGE_TAG }} .
  #       docker tag ${{ secrets.IMAGE_REPO_NAME }}:${{ vars.IMAGE_TAG }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}:${{ vars.IMAGE_TAG }}

  #   - name: Build and tag Docker image for frontend
  #     run: |
  #       cd frontend/
  #       echo "Building Docker image..."

  #       docker build -t ${{ secrets.IMAGE_REPO_NAME1 }}:${{ vars.IMAGE_TAG }} .
  #       docker tag ${{ secrets.IMAGE_REPO_NAME1 }}:${{ vars.IMAGE_TAG }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME1 }}:${{ vars.IMAGE_TAG }}

  #   - name: Push Docker image to Amazon ECR for backend
  #     run: |
  #       docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}:${{ vars.IMAGE_TAG }}

  #   - name: Push Docker image to Amazon ECR for frontend
  #     run: |
  #       docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME1 }}:${{ vars.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    # needs: build 

    environment:
      name: prod  # Specifies the environment name

    steps:
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Run SSM Command
      run: |
        echo ${{secrets.IMAGE_REPO_NAME1}} | sed 's/./& /g'
        # aws ssm send-command \
        #   --document-name "AWS-RunShellScript" \
        #   --targets "Key=instanceids,Values=${{ secrets.INSTANCE_ID }}" \
        #   --region ${{ secrets.AWS_REGION }} \
        #   --parameters 'commands=[
        #     "export AWS_REGION=${{ secrets.AWS_REGION }}", 
        #     "export AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}", 
        #     "/opt/stop_container.sh", 
        #     "/opt/start_container.sh"
        #   ]'
    
